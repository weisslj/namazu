#!%PERL% -w
#
# $Id: mecab-1.pl.in,v 1.2 2006-01-06 18:09:32 opengl2772 Exp $
# Copyright (C) 2005-2006 Tadamasa Teranishi
#               2005-2006 Namazu Project All rights reserved.
#     This is free software with ABSOLUTELY NO WARRANTY.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either versions 2, or (at your option)
#  any later version.
#
#  This program is distributed in the hope that it will be useful
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
#  02111-1307, USA
#
#  This file must be encoded in EUC-JP encoding
#
#

#
# Test for MeCab.
#

use strict;
require Cwd;
require 'pltests.pl';

my $cwd = Cwd::getcwd();
my $LOG = "$cwd/test-log";
my $TARGET = pltests::selectdata();
my $INDEX = "$cwd/idx111";
my $MKNMZ = pltests::binpath('mknmz');

my @cmd;

if (-d "$INDEX") {
    unlink(<$INDEX/NMZ.*>);
} else {
    mkdir("$INDEX");
}

#
# MeCab Check
#

my $MECAB = pltests::checkcmd('mecab');
exit 77 if (!defined $MECAB);

pltests::putline($LOG, "  *** starting $0");

my $RC = "$cwd/tmp.mknmzrc-mecab-1";
if (-f $RC) {
    unlink $RC;
}
pltests::putline($RC, 'package conf;');
pltests::putline($RC, "\$conf::MECAB = \"$MECAB -Owakati -b 8192\";");
pltests::putline($RC, '$conf::WAKATI = $MECAB;');

# Simple indexing.
@cmd = ("$MKNMZ", "-b", "-f", "$RC", "-O", "$INDEX", "$TARGET");
pltests::putline($LOG, "  *** ", \@cmd);
my $status = pltests::logsyscmd($LOG, \@cmd);

if (-f $RC) {
    unlink $RC;
}

exit 101 if ($status != 0);

#
# Test for namazu.
#

my $NAMAZU = pltests::binpath('namazu');

my $docnum;
my $doc = pltests::cat("$INDEX/NMZ.status");
unless (defined $doc) {
    exit 1;
}
if ($doc =~ /^files (\d+)/m) {
    $docnum = $1;
} else {
    exit 1;
}

# Check simple searching.
@cmd = ("$NAMAZU", "namazu", "$INDEX");
pltests::putline($LOG, "  ", \@cmd);
$status = pltests::logsyscmd($LOG, \@cmd);
if ($status != 0) {
    exit 1;
}

@cmd = ("$NAMAZU", "-c", "namazu", "$INDEX");
my $hitnum;
my $conts_err;
($status, $hitnum, $conts_err) = pltests::ezsyscmd(\@cmd);
unless (defined $hitnum) {
    exit 1;
}
chomp $hitnum;

pltests::putline($LOG, "docnum: $docnum hitnum: $hitnum");

if ($docnum != $hitnum) {
    exit 1;
}

exit 0;
