未実装

  * vfnmz を作る

  * gcnmz を古川さんに作ってもらう :-)
  
  * 画像・音声ファイルのコメント情報を元にインデックスを作る

  * URI指定に対応 (文書読み込みに lynx なりを用いればよい)

  * <a name="..."> や <xxx id="..."> に対応
    - 実装がちと難しそう (やめるかも)

  * .namazurc の構文エラーを検出する

  * DoS 対策
    - 中間・後方一致、正規表現、フィールド指定での検索を抑制 
    - IPアドレス、ドメイン名によるアクセス制御

  * Replace と Alias をもっときれいに書く (namazu)
    - 現在の LIST の実装は最低

  * gettext 化
    <http://plaza20.mbn.or.jp/~shimaki/>

  * コメントをすべて英語にする

  * 文書整備 (いろんな面で)

  * find でシンボリックをきちんと扱う (難しい)

  * 日付をキーにしたless than, greater thanの指定検索。(たかく氏 [616])
	( 1999年1月以降の記事 OR 1998年1月以前の記事 AND "TERM" )
	といった検索をしたい。

  * XSベースの Namazu.pm (野首さん [namazu 633] )

    今のような、雛形HTMLファイルを修正してカスタマイズするというやり方は、
    お手軽で便利なのは確かなのですが、細部まで手が届かないなあ、と思うこと
    が稀にあります。
  
    # より汎用化されたライブラリを整備すれば、Perlだけでなくrubyやpythonな
    # どのモジュールにもできるかも...
  
  * 検索結果が該当ゼロだったときに「検索のコツ」を表示する [namazu 774]


  * 英語の語形変化をうまく扱う方法を考える (世界進出にむけて :-)
    e.g. study/studies, eat/ate/eaten (面倒くさいな)

  * ヒット数がゼロだったキーワードを無視する (ひらがなだけ?)

  * NMZ.head の Search! ボタンの隣りに [Help] のリンクをつける。
    (ここをクリックすると NMZ.body が表示される)
  
  * NMZ.body を書き直す。 TIPS を充実させる。


======================================================
実装済

  * …よく考えてみると、相対パスでインデックスを指定するには MH
  風に +index と頭に "+" をつける方法がわかりやすくてよい気が
  してきました。今から仕様を変更しちゃってよいですか?
  => 実装しました。

  * 長い名前のコマンドラインオプションを実装
    - getopt.c と Getopt::Long を使うだけ
  => 実装しました。

  * NMZ.f のフォーマットを変更し、 NMZ.field.* と統合する
    - 現在のフォーマットは柔軟性ゼロな上にサイズ効率が悪い
  => 実装しました。

  * 検索結果の出力のフォーマットを指定できるようにする
    - 雛形ファイルをユーザが用意し、そこに要約やら URLを埋め
      込む。(<a href="$URL">$TITLE</a> といったように)
  => lexを使って実装しました。

  * namazu に 自殺コードを入れる
    ある数秒を経過したら自殺する (安全対策)
  => CGIのときだけ作動する自殺タイマーを導入しました

  * ^C に対するシグナルハンドラ (mknmz)
    - 強制終了されたとき、作業ファイルをかたずける
  => 実装しました。

  * インデックス作成時の URL置き換えを柔軟にする
    - たとえばこんな感じ
      % mknmz --replace-url='s!/foobar/www/!http://foobar.jp/!' 
  => 実装しました。[namazu-dev 282]参照

  * mknmz の引数としてディレクトリやファイル, URLを複数同時
    に指定可能にする (xargsが使える)
  => 実装しました。[namazu-dev 282]参照


  * NMZ.log を利用してインデックスの更新をする
    - mknmz のコマンドライン引数を指定する手間を省く
  => NMZ.status を導入

  * -F オプションを拡張
    - 排他指定を可能にする (このディレクトリはインデックスし
      ないという指定)
    - 末尾に / がついていなくてもディレクトリは展開する
  => [namazu-dev 282]参照

  * 文書読み込み部の抽象化 (APIを定義し、拡張性を高める)
    - 新しい文書形式への対応を容易にする
      e.g. Word文書, PDF, http://, ftp://, news://
  => 野首さんが実装してくれた

  * フィルタ部の抽象化 (APIを定義し、拡張性を高める)
    - 新しい文書形式への対応を容易にする
  => 野首さんが実装してくれた

  * 文書読み込み部とフィルタ部の統合 (APIを定義し、拡張性を高める)
  => 野首さんが実装してくれた

  * Append 時に mknmz のコマンドラインオプションを省略できるよう
    にする
  => mknmz --update=/index/directory で対応

  | (2) スキップするファイル/ディレクトリの指定
  | 
  | スキップするファイル名に関しては mknmz の $DENY_FILE で
  | 指定できるようですが、ディレクトリも含めたファイル名で
  | 指定できるようにできませんでしょうか。

  => mknmz --exclude=regex で対応

  * mknmzの利用するモジュールの表示機能。(たかく氏)
	以下のような感じでしょうか。
	% mknmz -C
	Perl:	/usr/local/bin/perl (Version 5.004_04)
	NKF:	module_nkf
	KAKASI: /usr/local/bin/kakasi
	ChaSen:	module_chasen1
	WAKATI_DEFAULT:	KAKASI
  => 実装しました 1999-09-01

  * 文書のタイトルでソートする機能を実装
    - NMZ.field.subject を使ってソートすればよい
  => 任意のフィールドでソートできます 1999-09-02

  * CGIからフィールド指定のソート方法を指定できるようにする
  => しました 1999-09-04

  * .namazurc の書式変更
    - タブを強制するなんて最低。 空白・タブ区切りにする
    - 空白記号 (0x20) を含む文字列は "..."  でくくる
    - ~/ を $HOME で展開する
  => 実装しました 1999-09-04

  * NMZ.result のスキャナを自作する
  => 実装しました 1999-09-05

  * NMZ.result, NMZ.field.* を何度も読み直すのは馬鹿げている
    ので、caching 機構を導入する。
  => 実装しました 1999-09-05


======================================================
ボツ

  * mknmz -n を実装
    - make -n と同じ意味
  => 意味がなさそうだ
